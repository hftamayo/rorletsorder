{
  "swagger": "2.0",
  "info": {
    "description": "LetsOrder is a Business to Business Platform for managing clients, selling products, flash sales, one last minute offer, prime subscriptions.",
    "version": "0.0.1",
    "title": "Lets Order",
    "termsOfService": "https://reactletsorder.vercel.app/",
    "contact": {
      "email": "hftamayo@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "reactletsorder.vercel.app",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Clients",
      "description": "Model for handling clients info"
    },
    {
      "name": "Meals",
      "description": "Model for handling products/services"
    },
    {
      "name": "orders",
      "description": "Official model for handling orders"
    },
    {
      "name": "ordertemps",
      "description": "Mockup model for handling orders",
      "externalDocs": {
        "description": "This is a mock class for testing purposes",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Returns all clients",
        "description": "Return all records in Clients",
        "operationId": "getClients",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create a new client",
        "description": "",
        "operationId": "newClient",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/client/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Find a client by ID",
        "description": "Searching for a specific client",
        "operationId": "getClientById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10000,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete a Client by ID",
        "description": "Delete a Client",
        "operationId": "deleteClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the client that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/meals": {
      "get": {
        "tags": [
          "Meals"
        ],
        "summary": "Returns available meals",
        "description": "Return all records in Meals",
        "operationId": "getMeals",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/ordertemps": {
      "get": {
        "tags": [
          "ordertemps"
        ],
        "summary": "Returns placed orders",
        "description": "Return all records in Ordertemps",
        "operationId": "getOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "ordertemps"
        ],
        "summary": "Place an order",
        "description": "",
        "operationId": "placeOrder",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/ordertemp/{id}": {
      "get": {
        "tags": [
          "ordertemps"
        ],
        "summary": "Find an order by ID",
        "description": "Searching for an specific order",
        "operationId": "getOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of order that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10000,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ordertemps"
        ],
        "summary": "Invalid an placed order by ID",
        "description": "cancel an order already placed",
        "operationId": "deleteOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Clients": {
      "type": "object",
      "required": [
        "id",
        "firstname",
        "lastname",
        "email",
        "password_digest"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "autoincrement"
        },
        "firstname": {
          "type": "string",
          "example": "Herbert"
        },
        "lastname": {
          "type": "string",
          "example": "Tamayo"
        },
        "email": {
          "type": "string",
          "example": "hftamayo@gmail.com"
        },
        "password_digest": {
          "type": "string",
          "example": "Order01"
        }
      }
    },
    "Meals": {
      "type": "object",
      "required": [
        "id",
        "name",
        "description",
        "price",
        "available"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "autoincrement"
        },
        "name": {
          "type": "string",
          "example": "Salvadoran Coffee"
        },
        "description": {
          "type": "string",
          "example": "High Quality salvadoran coffee"
        },
        "price": {
          "type": "number",
          "example": "1.25"
        },
        "available": {
          "type": "boolean",
          "default": true
        }
      }
    },
    "Orders": {
      "type": "object",
      "required": [
        "id",
        "itemamount",
        "clients_id",
        "meals_id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "autoincrement"
        },
        "itemamount": {
          "type": "integer",
          "example": "4"
        },
        "clientrequest": {
          "type": "string",
          "example": "add extra sauce and special cheese"
        },
        "clients_id": {
          "type": "integer",
          "example": "4"
        },
        "meals_id": {
          "type": "integer",
          "example": "1"
        }
      }
    },
    "Ordertemp": {
      "type": "object",
      "required": [
        "none"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "autoincrement"
        },
        "amount": {
          "type": "integer",
          "example": "2"
        },
        "name": {
          "type": "string",
          "example": "Kolashampan"
        },
        "price": {
          "type": "number",
          "example": "0.65"
        },
        "clientName": {
          "type": "string",
          "example": "John Doe"
        },
        "clientId": {
          "type": "integer",
          "example": "5"
        }
      }
    }
  }
}